{"ast":null,"code":"import { get } from \"lodash\";\nimport { createSelector } from \"reselect\";\n\nvar account = function account(state) {\n  return get(state, 'web3.account');\n};\n\nexport var accountSelector = createSelector(account, function (account) {\n  return account;\n});\n\nvar tokenLoaded = function tokenLoaded(state) {\n  return get(state, 'token.loaded', false);\n};\n\nexport var tokenLoadedSelector = createSelector(tokenLoaded, function (tokenLoaded) {\n  return tokenLoaded;\n});\n\nvar exchangeLoaded = function exchangeLoaded(state) {\n  return get(state, 'exchange.loaded', false);\n};\n\nexport var exchangeLoadedSelector = createSelector(exchangeLoaded, function (exchangeLoaded) {\n  return exchangeLoaded;\n}); // const contractLoaded = state =>","map":{"version":3,"sources":["/home/amateo/repo/blockchain-developer-bootcamp/src/store/selectors.js"],"names":["get","createSelector","account","state","accountSelector","tokenLoaded","tokenLoadedSelector","exchangeLoaded","exchangeLoadedSelector"],"mappings":"AAAA,SAASA,GAAT,QAAoB,QAApB;AACA,SAASC,cAAT,QAA+B,UAA/B;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAAAC,KAAK;AAAA,SAAIH,GAAG,CAACG,KAAD,EAAQ,cAAR,CAAP;AAAA,CAArB;;AAEA,OAAO,IAAMC,eAAe,GAAGH,cAAc,CAACC,OAAD,EAAU,UAAAA,OAAO;AAAA,SAAIA,OAAJ;AAAA,CAAjB,CAAtC;;AAEP,IAAMG,WAAW,GAAG,SAAdA,WAAc,CAAAF,KAAK;AAAA,SAAIH,GAAG,CAACG,KAAD,EAAQ,cAAR,EAAwB,KAAxB,CAAP;AAAA,CAAzB;;AACA,OAAO,IAAMG,mBAAmB,GAAGL,cAAc,CAACI,WAAD,EAAc,UAAAA,WAAW;AAAA,SAAIA,WAAJ;AAAA,CAAzB,CAA1C;;AAEP,IAAME,cAAc,GAAG,SAAjBA,cAAiB,CAAAJ,KAAK;AAAA,SAAIH,GAAG,CAACG,KAAD,EAAQ,iBAAR,EAA2B,KAA3B,CAAP;AAAA,CAA5B;;AACA,OAAO,IAAMK,sBAAsB,GAAGP,cAAc,CAACM,cAAD,EAAiB,UAAAA,cAAc;AAAA,SAAIA,cAAJ;AAAA,CAA/B,CAA7C,C,CAEP","sourcesContent":["import { get } from \"lodash\";\nimport { createSelector } from \"reselect\";\n\nconst account = state => get(state, 'web3.account')\n\nexport const accountSelector = createSelector(account, account => account)\n\nconst tokenLoaded = state => get(state, 'token.loaded', false)\nexport const tokenLoadedSelector = createSelector(tokenLoaded, tokenLoaded => tokenLoaded)\n\nconst exchangeLoaded = state => get(state, 'exchange.loaded', false)\nexport const exchangeLoadedSelector = createSelector(exchangeLoaded, exchangeLoaded => exchangeLoaded)\n\n// const contractLoaded = state => \n"]},"metadata":{},"sourceType":"module"}