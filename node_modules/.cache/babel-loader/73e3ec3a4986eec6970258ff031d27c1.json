{"ast":null,"code":"import _objectSpread from \"/home/amateo/repo/blockchain-developer-bootcamp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { combineReducers } from 'redux';\n\nfunction web3() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'WEB3_LOADED':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        connection: action.connection\n      });\n\n    case 'WEB3_ACCOUNT_LOADED':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        account: action.account\n      });\n\n    case 'NETWORK_ID_LOADED':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        networkId: action.networkId\n      });\n\n    default:\n      return state;\n  }\n}\n\nfunction token() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'TOKEN_LOADED':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loaded: true,\n        contract: action.contract\n      });\n\n    default:\n      return state;\n  }\n}\n\nfunction exchange() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'EXCHANGE_LOADED':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loaded: true,\n        exchange: action.exchange\n      });\n\n    default:\n      return state;\n  }\n}\n\nvar rootReducer = combineReducers({\n  web3: web3,\n  token: token,\n  exchange: exchange\n});\nexport default rootReducer;","map":{"version":3,"sources":["/home/amateo/repo/blockchain-developer-bootcamp/src/store/reducer.js"],"names":["combineReducers","web3","state","action","type","connection","account","networkId","token","loaded","contract","exchange","rootReducer"],"mappings":";AAAA,SAASA,eAAT,QAAgC,OAAhC;;AAEA,SAASC,IAAT,GAAkC;AAAA,MAApBC,KAAoB,uEAAZ,EAAY;AAAA,MAARC,MAAQ;;AAC9B,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,aAAL;AACI,6CAAYF,KAAZ;AAAmBG,QAAAA,UAAU,EAAEF,MAAM,CAACE;AAAtC;;AACJ,SAAK,qBAAL;AACI,6CAAYH,KAAZ;AAAmBI,QAAAA,OAAO,EAAEH,MAAM,CAACG;AAAnC;;AACJ,SAAK,mBAAL;AACI,6CAAYJ,KAAZ;AAAmBK,QAAAA,SAAS,EAAEJ,MAAM,CAACI;AAArC;;AACJ;AACI,aAAOL,KAAP;AARR;AAUH;;AAED,SAASM,KAAT,GAAmC;AAAA,MAApBN,KAAoB,uEAAZ,EAAY;AAAA,MAARC,MAAQ;;AAC/B,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,cAAL;AACI,6CAAYF,KAAZ;AAAmBO,QAAAA,MAAM,EAAE,IAA3B;AAAiCC,QAAAA,QAAQ,EAAEP,MAAM,CAACO;AAAlD;;AACJ;AACI,aAAOR,KAAP;AAJR;AAMH;;AAED,SAASS,QAAT,GAAsC;AAAA,MAApBT,KAAoB,uEAAZ,EAAY;AAAA,MAARC,MAAQ;;AAClC,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,iBAAL;AACI,6CAAYF,KAAZ;AAAmBO,QAAAA,MAAM,EAAE,IAA3B;AAAiCE,QAAAA,QAAQ,EAAER,MAAM,CAACQ;AAAlD;;AACJ;AACI,aAAOT,KAAP;AAJR;AAMH;;AAED,IAAMU,WAAW,GAAGZ,eAAe,CAAC;AAChCC,EAAAA,IAAI,EAAJA,IADgC;AAEhCO,EAAAA,KAAK,EAALA,KAFgC;AAGhCG,EAAAA,QAAQ,EAARA;AAHgC,CAAD,CAAnC;AAMA,eAAeC,WAAf","sourcesContent":["import { combineReducers } from 'redux'\n\nfunction web3(state = {}, action) {\n    switch (action.type) {\n        case 'WEB3_LOADED':\n            return { ...state, connection: action.connection }\n        case 'WEB3_ACCOUNT_LOADED':\n            return { ...state, account: action.account }\n        case 'NETWORK_ID_LOADED':\n            return { ...state, networkId: action.networkId }\n        default:\n            return state\n    }\n}\n\nfunction token(state = {}, action) {\n    switch (action.type) {\n        case 'TOKEN_LOADED':\n            return { ...state, loaded: true, contract: action.contract }\n        default:\n            return state\n    }\n}\n\nfunction exchange(state = {}, action) {\n    switch (action.type) {\n        case 'EXCHANGE_LOADED':\n            return { ...state, loaded: true, exchange: action.exchange }\n        default:\n            return state\n    }\n}\n\nconst rootReducer = combineReducers({\n    web3,\n    token,\n    exchange\n})\n\nexport default rootReducer"]},"metadata":{},"sourceType":"module"}